//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8937
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace NewSDRR {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsreport")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsreport : global::System.Data.DataSet {
        
        private tripticketreportDataTable tabletripticketreport;
        
        private delstatusreportDataTable tabledelstatusreport;
        
        private client_summaryDataTable tableclient_summary;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsreport() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsreport(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tripticketreport"] != null)) {
                    base.Tables.Add(new tripticketreportDataTable(ds.Tables["tripticketreport"]));
                }
                if ((ds.Tables["delstatusreport"] != null)) {
                    base.Tables.Add(new delstatusreportDataTable(ds.Tables["delstatusreport"]));
                }
                if ((ds.Tables["client summary"] != null)) {
                    base.Tables.Add(new client_summaryDataTable(ds.Tables["client summary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tripticketreportDataTable tripticketreport {
            get {
                return this.tabletripticketreport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public delstatusreportDataTable delstatusreport {
            get {
                return this.tabledelstatusreport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public client_summaryDataTable client_summary {
            get {
                return this.tableclient_summary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsreport cln = ((dsreport)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tripticketreport"] != null)) {
                    base.Tables.Add(new tripticketreportDataTable(ds.Tables["tripticketreport"]));
                }
                if ((ds.Tables["delstatusreport"] != null)) {
                    base.Tables.Add(new delstatusreportDataTable(ds.Tables["delstatusreport"]));
                }
                if ((ds.Tables["client summary"] != null)) {
                    base.Tables.Add(new client_summaryDataTable(ds.Tables["client summary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletripticketreport = ((tripticketreportDataTable)(base.Tables["tripticketreport"]));
            if ((initTable == true)) {
                if ((this.tabletripticketreport != null)) {
                    this.tabletripticketreport.InitVars();
                }
            }
            this.tabledelstatusreport = ((delstatusreportDataTable)(base.Tables["delstatusreport"]));
            if ((initTable == true)) {
                if ((this.tabledelstatusreport != null)) {
                    this.tabledelstatusreport.InitVars();
                }
            }
            this.tableclient_summary = ((client_summaryDataTable)(base.Tables["client summary"]));
            if ((initTable == true)) {
                if ((this.tableclient_summary != null)) {
                    this.tableclient_summary.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsreport";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsreport.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletripticketreport = new tripticketreportDataTable();
            base.Tables.Add(this.tabletripticketreport);
            this.tabledelstatusreport = new delstatusreportDataTable();
            base.Tables.Add(this.tabledelstatusreport);
            this.tableclient_summary = new client_summaryDataTable();
            base.Tables.Add(this.tableclient_summary);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetripticketreport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedelstatusreport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeclient_summary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsreport ds = new dsreport();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tripticketreportRowChangeEventHandler(object sender, tripticketreportRowChangeEvent e);
        
        public delegate void delstatusreportRowChangeEventHandler(object sender, delstatusreportRowChangeEvent e);
        
        public delegate void client_summaryRowChangeEventHandler(object sender, client_summaryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tripticketreportDataTable : global::System.Data.TypedTableBase<tripticketreportRow> {
            
            private global::System.Data.DataColumn columnbranchcode;
            
            private global::System.Data.DataColumn columnvehlcode;
            
            private global::System.Data.DataColumn columnmaker;
            
            private global::System.Data.DataColumn columntripno;
            
            private global::System.Data.DataColumn columntripdate;
            
            private global::System.Data.DataColumn columnclient;
            
            private global::System.Data.DataColumn columnamount;
            
            private global::System.Data.DataColumn columnsdrrno;
            
            private global::System.Data.DataColumn columnzone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tripticketreportDataTable() {
                this.TableName = "tripticketreport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tripticketreportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tripticketreportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn branchcodeColumn {
                get {
                    return this.columnbranchcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehlcodeColumn {
                get {
                    return this.columnvehlcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn makerColumn {
                get {
                    return this.columnmaker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tripnoColumn {
                get {
                    return this.columntripno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tripdateColumn {
                get {
                    return this.columntripdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn clientColumn {
                get {
                    return this.columnclient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sdrrnoColumn {
                get {
                    return this.columnsdrrno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zoneColumn {
                get {
                    return this.columnzone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tripticketreportRow this[int index] {
                get {
                    return ((tripticketreportRow)(this.Rows[index]));
                }
            }
            
            public event tripticketreportRowChangeEventHandler tripticketreportRowChanging;
            
            public event tripticketreportRowChangeEventHandler tripticketreportRowChanged;
            
            public event tripticketreportRowChangeEventHandler tripticketreportRowDeleting;
            
            public event tripticketreportRowChangeEventHandler tripticketreportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtripticketreportRow(tripticketreportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tripticketreportRow AddtripticketreportRow(string branchcode, string vehlcode, string maker, string tripno, string tripdate, string client, decimal amount, string sdrrno, string zone) {
                tripticketreportRow rowtripticketreportRow = ((tripticketreportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        branchcode,
                        vehlcode,
                        maker,
                        tripno,
                        tripdate,
                        client,
                        amount,
                        sdrrno,
                        zone};
                rowtripticketreportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtripticketreportRow);
                return rowtripticketreportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tripticketreportDataTable cln = ((tripticketreportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tripticketreportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnbranchcode = base.Columns["branchcode"];
                this.columnvehlcode = base.Columns["vehlcode"];
                this.columnmaker = base.Columns["maker"];
                this.columntripno = base.Columns["tripno"];
                this.columntripdate = base.Columns["tripdate"];
                this.columnclient = base.Columns["client"];
                this.columnamount = base.Columns["amount"];
                this.columnsdrrno = base.Columns["sdrrno"];
                this.columnzone = base.Columns["zone"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnbranchcode = new global::System.Data.DataColumn("branchcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbranchcode);
                this.columnvehlcode = new global::System.Data.DataColumn("vehlcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehlcode);
                this.columnmaker = new global::System.Data.DataColumn("maker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmaker);
                this.columntripno = new global::System.Data.DataColumn("tripno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntripno);
                this.columntripdate = new global::System.Data.DataColumn("tripdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntripdate);
                this.columnclient = new global::System.Data.DataColumn("client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclient);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.columnsdrrno = new global::System.Data.DataColumn("sdrrno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsdrrno);
                this.columnzone = new global::System.Data.DataColumn("zone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzone);
                this.columnbranchcode.Caption = "DataColumn1";
                this.columnvehlcode.Caption = "DataColumn1";
                this.columnmaker.Caption = "DataColumn1";
                this.columntripno.Caption = "DataColumn1";
                this.columntripdate.Caption = "DataColumn1";
                this.columnclient.Caption = "DataColumn1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tripticketreportRow NewtripticketreportRow() {
                return ((tripticketreportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tripticketreportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tripticketreportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tripticketreportRowChanged != null)) {
                    this.tripticketreportRowChanged(this, new tripticketreportRowChangeEvent(((tripticketreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tripticketreportRowChanging != null)) {
                    this.tripticketreportRowChanging(this, new tripticketreportRowChangeEvent(((tripticketreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tripticketreportRowDeleted != null)) {
                    this.tripticketreportRowDeleted(this, new tripticketreportRowChangeEvent(((tripticketreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tripticketreportRowDeleting != null)) {
                    this.tripticketreportRowDeleting(this, new tripticketreportRowChangeEvent(((tripticketreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetripticketreportRow(tripticketreportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsreport ds = new dsreport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tripticketreportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class delstatusreportDataTable : global::System.Data.TypedTableBase<delstatusreportRow> {
            
            private global::System.Data.DataColumn columnsdrrno;
            
            private global::System.Data.DataColumn columninvoice_no;
            
            private global::System.Data.DataColumn columninvoice_value;
            
            private global::System.Data.DataColumn columninvoice_date;
            
            private global::System.Data.DataColumn columndatedel;
            
            private global::System.Data.DataColumn columndelstat;
            
            private global::System.Data.DataColumn columntripdate;
            
            private global::System.Data.DataColumn columntripno;
            
            private global::System.Data.DataColumn columncustomer;
            
            private global::System.Data.DataColumn columnclient;
            
            private global::System.Data.DataColumn columnismtd;
            
            private global::System.Data.DataColumn columntriptype;
            
            private global::System.Data.DataColumn columncutitems_amt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public delstatusreportDataTable() {
                this.TableName = "delstatusreport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal delstatusreportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected delstatusreportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sdrrnoColumn {
                get {
                    return this.columnsdrrno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoice_noColumn {
                get {
                    return this.columninvoice_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoice_valueColumn {
                get {
                    return this.columninvoice_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn invoice_dateColumn {
                get {
                    return this.columninvoice_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn datedelColumn {
                get {
                    return this.columndatedel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn delstatColumn {
                get {
                    return this.columndelstat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tripdateColumn {
                get {
                    return this.columntripdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tripnoColumn {
                get {
                    return this.columntripno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn customerColumn {
                get {
                    return this.columncustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn clientColumn {
                get {
                    return this.columnclient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ismtdColumn {
                get {
                    return this.columnismtd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn triptypeColumn {
                get {
                    return this.columntriptype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cutitems_amtColumn {
                get {
                    return this.columncutitems_amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public delstatusreportRow this[int index] {
                get {
                    return ((delstatusreportRow)(this.Rows[index]));
                }
            }
            
            public event delstatusreportRowChangeEventHandler delstatusreportRowChanging;
            
            public event delstatusreportRowChangeEventHandler delstatusreportRowChanged;
            
            public event delstatusreportRowChangeEventHandler delstatusreportRowDeleting;
            
            public event delstatusreportRowChangeEventHandler delstatusreportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddelstatusreportRow(delstatusreportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public delstatusreportRow AdddelstatusreportRow(string sdrrno, string invoice_no, decimal invoice_value, string invoice_date, string datedel, string delstat, string tripdate, string tripno, string customer, string client, string ismtd, string triptype, decimal cutitems_amt) {
                delstatusreportRow rowdelstatusreportRow = ((delstatusreportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        sdrrno,
                        invoice_no,
                        invoice_value,
                        invoice_date,
                        datedel,
                        delstat,
                        tripdate,
                        tripno,
                        customer,
                        client,
                        ismtd,
                        triptype,
                        cutitems_amt};
                rowdelstatusreportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdelstatusreportRow);
                return rowdelstatusreportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                delstatusreportDataTable cln = ((delstatusreportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new delstatusreportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsdrrno = base.Columns["sdrrno"];
                this.columninvoice_no = base.Columns["invoice_no"];
                this.columninvoice_value = base.Columns["invoice_value"];
                this.columninvoice_date = base.Columns["invoice_date"];
                this.columndatedel = base.Columns["datedel"];
                this.columndelstat = base.Columns["delstat"];
                this.columntripdate = base.Columns["tripdate"];
                this.columntripno = base.Columns["tripno"];
                this.columncustomer = base.Columns["customer"];
                this.columnclient = base.Columns["client"];
                this.columnismtd = base.Columns["ismtd"];
                this.columntriptype = base.Columns["triptype"];
                this.columncutitems_amt = base.Columns["cutitems_amt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsdrrno = new global::System.Data.DataColumn("sdrrno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsdrrno);
                this.columninvoice_no = new global::System.Data.DataColumn("invoice_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_no);
                this.columninvoice_value = new global::System.Data.DataColumn("invoice_value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_value);
                this.columninvoice_date = new global::System.Data.DataColumn("invoice_date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninvoice_date);
                this.columndatedel = new global::System.Data.DataColumn("datedel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatedel);
                this.columndelstat = new global::System.Data.DataColumn("delstat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndelstat);
                this.columntripdate = new global::System.Data.DataColumn("tripdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntripdate);
                this.columntripno = new global::System.Data.DataColumn("tripno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntripno);
                this.columncustomer = new global::System.Data.DataColumn("customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomer);
                this.columnclient = new global::System.Data.DataColumn("client", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclient);
                this.columnismtd = new global::System.Data.DataColumn("ismtd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnismtd);
                this.columntriptype = new global::System.Data.DataColumn("triptype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntriptype);
                this.columncutitems_amt = new global::System.Data.DataColumn("cutitems_amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncutitems_amt);
                this.columnsdrrno.Caption = "DataColumn1";
                this.columninvoice_no.Caption = "DataColumn1";
                this.columninvoice_value.Caption = "DataColumn1";
                this.columninvoice_date.Caption = "DataColumn1";
                this.columndatedel.Caption = "DataColumn1";
                this.columndelstat.Caption = "DataColumn1";
                this.columntripdate.Caption = "DataColumn1";
                this.columntripno.Caption = "DataColumn1";
                this.columncustomer.Caption = "DataColumn1";
                this.columnclient.Caption = "DataColumn1";
                this.columnismtd.Caption = "DataColumn1";
                this.columntriptype.Caption = "DataColumn1";
                this.columncutitems_amt.Caption = "DataColumn1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public delstatusreportRow NewdelstatusreportRow() {
                return ((delstatusreportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new delstatusreportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(delstatusreportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.delstatusreportRowChanged != null)) {
                    this.delstatusreportRowChanged(this, new delstatusreportRowChangeEvent(((delstatusreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.delstatusreportRowChanging != null)) {
                    this.delstatusreportRowChanging(this, new delstatusreportRowChangeEvent(((delstatusreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.delstatusreportRowDeleted != null)) {
                    this.delstatusreportRowDeleted(this, new delstatusreportRowChangeEvent(((delstatusreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.delstatusreportRowDeleting != null)) {
                    this.delstatusreportRowDeleting(this, new delstatusreportRowChangeEvent(((delstatusreportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedelstatusreportRow(delstatusreportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsreport ds = new dsreport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "delstatusreportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class client_summaryDataTable : global::System.Data.TypedTableBase<client_summaryRow> {
            
            private global::System.Data.DataColumn columnclientname;
            
            private global::System.Data.DataColumn columntotaldel;
            
            private global::System.Data.DataColumn columntotalcutitem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public client_summaryDataTable() {
                this.TableName = "client summary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal client_summaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected client_summaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn clientnameColumn {
                get {
                    return this.columnclientname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totaldelColumn {
                get {
                    return this.columntotaldel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalcutitemColumn {
                get {
                    return this.columntotalcutitem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public client_summaryRow this[int index] {
                get {
                    return ((client_summaryRow)(this.Rows[index]));
                }
            }
            
            public event client_summaryRowChangeEventHandler client_summaryRowChanging;
            
            public event client_summaryRowChangeEventHandler client_summaryRowChanged;
            
            public event client_summaryRowChangeEventHandler client_summaryRowDeleting;
            
            public event client_summaryRowChangeEventHandler client_summaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addclient_summaryRow(client_summaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public client_summaryRow Addclient_summaryRow(string clientname, decimal totaldel, decimal totalcutitem) {
                client_summaryRow rowclient_summaryRow = ((client_summaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        clientname,
                        totaldel,
                        totalcutitem};
                rowclient_summaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowclient_summaryRow);
                return rowclient_summaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                client_summaryDataTable cln = ((client_summaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new client_summaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnclientname = base.Columns["clientname"];
                this.columntotaldel = base.Columns["totaldel"];
                this.columntotalcutitem = base.Columns["totalcutitem"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnclientname = new global::System.Data.DataColumn("clientname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclientname);
                this.columntotaldel = new global::System.Data.DataColumn("totaldel", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotaldel);
                this.columntotalcutitem = new global::System.Data.DataColumn("totalcutitem", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalcutitem);
                this.columntotaldel.Caption = "DataColumn1";
                this.columntotalcutitem.Caption = "DataColumn1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public client_summaryRow Newclient_summaryRow() {
                return ((client_summaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new client_summaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(client_summaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.client_summaryRowChanged != null)) {
                    this.client_summaryRowChanged(this, new client_summaryRowChangeEvent(((client_summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.client_summaryRowChanging != null)) {
                    this.client_summaryRowChanging(this, new client_summaryRowChangeEvent(((client_summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.client_summaryRowDeleted != null)) {
                    this.client_summaryRowDeleted(this, new client_summaryRowChangeEvent(((client_summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.client_summaryRowDeleting != null)) {
                    this.client_summaryRowDeleting(this, new client_summaryRowChangeEvent(((client_summaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeclient_summaryRow(client_summaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsreport ds = new dsreport();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "client_summaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tripticketreportRow : global::System.Data.DataRow {
            
            private tripticketreportDataTable tabletripticketreport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tripticketreportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletripticketreport = ((tripticketreportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string branchcode {
                get {
                    try {
                        return ((string)(this[this.tabletripticketreport.branchcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'branchcode\' in table \'tripticketreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletripticketreport.branchcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vehlcode {
                get {
                    try {
                        return ((string)(this[this.tabletripticketreport.vehlcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vehlcode\' in table \'tripticketreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletripticketreport.vehlcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string maker {
                get {
                    try {
                        return ((string)(this[this.tabletripticketreport.makerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'maker\' in table \'tripticketreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletripticketreport.makerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tripno {
                get {
                    try {
                        return ((string)(this[this.tabletripticketreport.tripnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tripno\' in table \'tripticketreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletripticketreport.tripnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tripdate {
                get {
                    try {
                        return ((string)(this[this.tabletripticketreport.tripdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tripdate\' in table \'tripticketreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletripticketreport.tripdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string client {
                get {
                    try {
                        return ((string)(this[this.tabletripticketreport.clientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'client\' in table \'tripticketreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletripticketreport.clientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal amount {
                get {
                    try {
                        return ((decimal)(this[this.tabletripticketreport.amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'amount\' in table \'tripticketreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletripticketreport.amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sdrrno {
                get {
                    try {
                        return ((string)(this[this.tabletripticketreport.sdrrnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sdrrno\' in table \'tripticketreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletripticketreport.sdrrnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zone {
                get {
                    try {
                        return ((string)(this[this.tabletripticketreport.zoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'zone\' in table \'tripticketreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletripticketreport.zoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbranchcodeNull() {
                return this.IsNull(this.tabletripticketreport.branchcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbranchcodeNull() {
                this[this.tabletripticketreport.branchcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvehlcodeNull() {
                return this.IsNull(this.tabletripticketreport.vehlcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvehlcodeNull() {
                this[this.tabletripticketreport.vehlcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmakerNull() {
                return this.IsNull(this.tabletripticketreport.makerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmakerNull() {
                this[this.tabletripticketreport.makerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstripnoNull() {
                return this.IsNull(this.tabletripticketreport.tripnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettripnoNull() {
                this[this.tabletripticketreport.tripnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstripdateNull() {
                return this.IsNull(this.tabletripticketreport.tripdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettripdateNull() {
                this[this.tabletripticketreport.tripdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclientNull() {
                return this.IsNull(this.tabletripticketreport.clientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclientNull() {
                this[this.tabletripticketreport.clientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsamountNull() {
                return this.IsNull(this.tabletripticketreport.amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetamountNull() {
                this[this.tabletripticketreport.amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssdrrnoNull() {
                return this.IsNull(this.tabletripticketreport.sdrrnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsdrrnoNull() {
                this[this.tabletripticketreport.sdrrnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszoneNull() {
                return this.IsNull(this.tabletripticketreport.zoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzoneNull() {
                this[this.tabletripticketreport.zoneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class delstatusreportRow : global::System.Data.DataRow {
            
            private delstatusreportDataTable tabledelstatusreport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal delstatusreportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledelstatusreport = ((delstatusreportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sdrrno {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.sdrrnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sdrrno\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.sdrrnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string invoice_no {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.invoice_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_no\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.invoice_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal invoice_value {
                get {
                    try {
                        return ((decimal)(this[this.tabledelstatusreport.invoice_valueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_value\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.invoice_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string invoice_date {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.invoice_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'invoice_date\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.invoice_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string datedel {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.datedelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'datedel\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.datedelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string delstat {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.delstatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'delstat\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.delstatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tripdate {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.tripdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tripdate\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.tripdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tripno {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.tripnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tripno\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.tripnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string customer {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.customerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customer\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.customerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string client {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.clientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'client\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.clientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ismtd {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.ismtdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ismtd\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.ismtdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string triptype {
                get {
                    try {
                        return ((string)(this[this.tabledelstatusreport.triptypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'triptype\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.triptypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal cutitems_amt {
                get {
                    try {
                        return ((decimal)(this[this.tabledelstatusreport.cutitems_amtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cutitems_amt\' in table \'delstatusreport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledelstatusreport.cutitems_amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssdrrnoNull() {
                return this.IsNull(this.tabledelstatusreport.sdrrnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsdrrnoNull() {
                this[this.tabledelstatusreport.sdrrnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinvoice_noNull() {
                return this.IsNull(this.tabledelstatusreport.invoice_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinvoice_noNull() {
                this[this.tabledelstatusreport.invoice_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinvoice_valueNull() {
                return this.IsNull(this.tabledelstatusreport.invoice_valueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinvoice_valueNull() {
                this[this.tabledelstatusreport.invoice_valueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinvoice_dateNull() {
                return this.IsNull(this.tabledelstatusreport.invoice_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinvoice_dateNull() {
                this[this.tabledelstatusreport.invoice_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdatedelNull() {
                return this.IsNull(this.tabledelstatusreport.datedelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdatedelNull() {
                this[this.tabledelstatusreport.datedelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdelstatNull() {
                return this.IsNull(this.tabledelstatusreport.delstatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdelstatNull() {
                this[this.tabledelstatusreport.delstatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstripdateNull() {
                return this.IsNull(this.tabledelstatusreport.tripdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettripdateNull() {
                this[this.tabledelstatusreport.tripdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstripnoNull() {
                return this.IsNull(this.tabledelstatusreport.tripnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettripnoNull() {
                this[this.tabledelstatusreport.tripnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscustomerNull() {
                return this.IsNull(this.tabledelstatusreport.customerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcustomerNull() {
                this[this.tabledelstatusreport.customerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclientNull() {
                return this.IsNull(this.tabledelstatusreport.clientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclientNull() {
                this[this.tabledelstatusreport.clientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsismtdNull() {
                return this.IsNull(this.tabledelstatusreport.ismtdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetismtdNull() {
                this[this.tabledelstatusreport.ismtdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstriptypeNull() {
                return this.IsNull(this.tabledelstatusreport.triptypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettriptypeNull() {
                this[this.tabledelstatusreport.triptypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscutitems_amtNull() {
                return this.IsNull(this.tabledelstatusreport.cutitems_amtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcutitems_amtNull() {
                this[this.tabledelstatusreport.cutitems_amtColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class client_summaryRow : global::System.Data.DataRow {
            
            private client_summaryDataTable tableclient_summary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal client_summaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableclient_summary = ((client_summaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string clientname {
                get {
                    try {
                        return ((string)(this[this.tableclient_summary.clientnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'clientname\' in table \'client summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient_summary.clientnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totaldel {
                get {
                    try {
                        return ((decimal)(this[this.tableclient_summary.totaldelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totaldel\' in table \'client summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient_summary.totaldelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totalcutitem {
                get {
                    try {
                        return ((decimal)(this[this.tableclient_summary.totalcutitemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalcutitem\' in table \'client summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableclient_summary.totalcutitemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclientnameNull() {
                return this.IsNull(this.tableclient_summary.clientnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclientnameNull() {
                this[this.tableclient_summary.clientnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotaldelNull() {
                return this.IsNull(this.tableclient_summary.totaldelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotaldelNull() {
                this[this.tableclient_summary.totaldelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalcutitemNull() {
                return this.IsNull(this.tableclient_summary.totalcutitemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalcutitemNull() {
                this[this.tableclient_summary.totalcutitemColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tripticketreportRowChangeEvent : global::System.EventArgs {
            
            private tripticketreportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tripticketreportRowChangeEvent(tripticketreportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tripticketreportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class delstatusreportRowChangeEvent : global::System.EventArgs {
            
            private delstatusreportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public delstatusreportRowChangeEvent(delstatusreportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public delstatusreportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class client_summaryRowChangeEvent : global::System.EventArgs {
            
            private client_summaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public client_summaryRowChangeEvent(client_summaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public client_summaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591